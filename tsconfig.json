{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Projects */
    // "incremental": true,                              /* Save .tsbuildinfo files to allow for incremental compilation of projects. */
    // "composite": true,                                /* Enable constraints that allow a TypeScript project to be used with project references. */
    // "tsBuildInfoFile": "./.tsbuildinfo",              /* Specify the path to .tsbuildinfo incremental compilation file. */
    // "disableSourceOfProjectReferenceRedirect": true,  /* Disable preferring source files instead of declaration files when referencing composite projects. */
    // "disableSolutionSearching": true,                 /* Opt a project out of multi-project reference checking when editing. */
    // "disableReferencedProjectLoad": true,             /* Reduce the number of projects loaded automatically by TypeScript. */

    /* Language and Environment */
    "target": "ES2020",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "useDefineForClassFields": true,                    /* Emit ECMAScript-standard-compliant class fields. */
    "lib": ["ES2020", "DOM", "DOM.Iterable"],           /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "jsx": "react-jsx",                                 /* Specify what JSX code is generated. */

    /* Modules */
    "module": "ESNext",                                  /* Specify what module code is generated. */
    "moduleResolution": "bundler",                      /* Specify how TypeScript looks up a file from a given module specifier. */
    "allowImportingTsExtensions": true,                 /* Allow imports to include TypeScript file extensions. Requires '--moduleResolution bundler' and either '--noEmit' or '--emitDeclarationOnly' to be set. */
    "resolveJsonModule": true,                          /* Enable importing .json files. */

    /* JavaScript Support */
    "allowJs": true,                                    /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */

    /* Emit */
    "noEmit": true,                                     /* Disable emitting files from a compilation. */

    /* Interop Constraints */
    "isolatedModules": true,                            /* Ensure that each file can be safely transpiled without relying on other imports. */
    "esModuleInterop": true,                            /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "allowSyntheticDefaultImports": true,               /* Allow 'import x from y' when a module doesn't have a default export. */
    "forceConsistentCasingInFileNames": true,           /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,                                     /* Enable all strict type-checking options. */
    "noUnusedLocals": true,                             /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": true,                         /* Raise an error when a function parameter isn't read. */
    "noFallthroughCasesInSwitch": true,                 /* Enable error reporting for fallthrough cases in switch statements. */

    /* Completeness */
    "skipLibCheck": true                                /* Skip type checking all .d.ts files. */
  },
  "include": ["src", "vite.config.ts"],
  "references": [{ "path": "./tsconfig.node.json" }]
}
